import requests
import re
from requests.packages.urllib3.exceptions import InsecureRequestWarning

# Suppress the warning
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

# Specify the URL template with a placeholder for the domain
URL_TEMPLATE = "https://{}/webui/logoutconfirm.html?logon_hash=1"

# Specify the file path
file_path = "url_list.txt"

# Define a regular expression pattern to check for hexadecimal values
hexadecimal_pattern = r'[0-9A-Fa-f]+'

exploited_count = 0  # Initialize the count of exploited domains
total_domains = 0   # Initialize the count of total domains analyzed

try:
    # Open and read the TXT file to get domains
    with open(file_path, 'r') as file:
        domains = [line.strip() for line in file.readlines()]
        total_domains = len(domains)  # Count the total domains analyzed

    for domain in domains:
        # Substitute the domain into the URL template
        URL = URL_TEMPLATE.format(domain)

        try:
            # Perform the POST request using requests
            response = requests.post(URL, verify=False)

            # Check if the response contains hexadecimal values and print only if found
            if re.search(hexadecimal_pattern, response.text):
                # Output the domain and response content
                print(f"Domain: {domain} - Response: {response.text}")
                print("=" * 20)  # Separate responses with a line
                exploited_count += 1  # Increment the count of exploited domains
        except Exception as e:
            # Ignore errors and continue to the next host
            continue
except FileNotFoundError:
    print(f"File not found: {file_path}")

# Print the count of exploited domains and the total number of domains analyzed at the end
print(f"Exploited Domains: {exploited_count}")
print(f"Total Domains Analyzed: {total_domains}")
